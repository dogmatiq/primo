// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/dogmatiq/primo/internal/test/accessor/oneof.proto

package accessor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OneOf struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Group:
	//
	//	*OneOf_FieldA
	//	*OneOf_FieldB
	//	*OneOf_FieldC
	Group         isOneOf_Group `protobuf_oneof:"group"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OneOf) Reset() {
	*x = OneOf{}
	mi := &file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OneOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOf) ProtoMessage() {}

func (x *OneOf) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOf.ProtoReflect.Descriptor instead.
func (*OneOf) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDescGZIP(), []int{0}
}

func (x *OneOf) GetGroup() isOneOf_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *OneOf) GetFieldA() int32 {
	if x != nil {
		if x, ok := x.Group.(*OneOf_FieldA); ok {
			return x.FieldA
		}
	}
	return 0
}

func (x *OneOf) GetFieldB() int32 {
	if x != nil {
		if x, ok := x.Group.(*OneOf_FieldB); ok {
			return x.FieldB
		}
	}
	return 0
}

func (x *OneOf) GetFieldC() string {
	if x != nil {
		if x, ok := x.Group.(*OneOf_FieldC); ok {
			return x.FieldC
		}
	}
	return ""
}

type isOneOf_Group interface {
	isOneOf_Group()
}

type OneOf_FieldA struct {
	FieldA int32 `protobuf:"varint,1,opt,name=field_a,json=fieldA,proto3,oneof"` // note: two fields of the same type
}

type OneOf_FieldB struct {
	FieldB int32 `protobuf:"varint,2,opt,name=field_b,json=fieldB,proto3,oneof"`
}

type OneOf_FieldC struct {
	FieldC string `protobuf:"bytes,3,opt,name=field_c,json=fieldC,proto3,oneof"`
}

func (*OneOf_FieldA) isOneOf_Group() {}

func (*OneOf_FieldB) isOneOf_Group() {}

func (*OneOf_FieldC) isOneOf_Group() {}

var File_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto protoreflect.FileDescriptor

const file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDesc = "" +
	"\n" +
	"<github.com/dogmatiq/primo/internal/test/accessor/oneof.proto\x12\x13primo.test.mutators\"a\n" +
	"\x05OneOf\x12\x19\n" +
	"\afield_a\x18\x01 \x01(\x05H\x00R\x06fieldA\x12\x19\n" +
	"\afield_b\x18\x02 \x01(\x05H\x00R\x06fieldB\x12\x19\n" +
	"\afield_c\x18\x03 \x01(\tH\x00R\x06fieldCB\a\n" +
	"\x05groupB2Z0github.com/dogmatiq/primo/internal/test/accessorb\x06proto3"

var (
	file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDescOnce sync.Once
	file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDescData []byte
)

func file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDescGZIP() []byte {
	file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDescOnce.Do(func() {
		file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDesc), len(file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDesc)))
	})
	return file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDescData
}

var file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_goTypes = []any{
	(*OneOf)(nil), // 0: primo.test.mutators.OneOf
}
var file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_init() }
func file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_init() {
	if File_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto != nil {
		return
	}
	file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_msgTypes[0].OneofWrappers = []any{
		(*OneOf_FieldA)(nil),
		(*OneOf_FieldB)(nil),
		(*OneOf_FieldC)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDesc), len(file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_goTypes,
		DependencyIndexes: file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_depIdxs,
		MessageInfos:      file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_msgTypes,
	}.Build()
	File_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto = out.File
	file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_goTypes = nil
	file_github_com_dogmatiq_primo_internal_test_accessor_oneof_proto_depIdxs = nil
}
